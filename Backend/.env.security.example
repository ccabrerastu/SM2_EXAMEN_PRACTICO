# ===========================================
# SECURITY CONFIGURATION ENVIRONMENT VARIABLES
# ===========================================
# Copy this file to .env and update with your values

# Basic App Configuration
NODE_ENV=development
PORT=3000
API_PREFIX=api/v1
TRUST_PROXY=false
ENABLE_SECURITY_MIDDLEWARE=true
ENABLE_RATE_LIMITING=true

# ===========================================
# CORS CONFIGURATION
# ===========================================
CORS_ORIGINS=http://localhost:3000,http://localhost:3001,https://your-frontend-domain.com
CORS_CREDENTIALS=true
CORS_METHODS=GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Origin,X-Requested-With,Content-Type,Accept,Authorization,X-CSRF-Token,X-Forwarded-For
CORS_EXPOSED_HEADERS=X-Total-Count,X-Page-Count
CORS_MAX_AGE=86400

# ===========================================
# SECURITY HEADERS
# ===========================================
HSTS_MAX_AGE=31536000
HSTS_INCLUDE_SUBDOMAINS=true
HSTS_PRELOAD=false
REFERRER_POLICY=strict-origin-when-cross-origin
X_FRAME_OPTIONS=DENY
X_CONTENT_TYPE_OPTIONS=true
X_XSS_PROTECTION=1; mode=block

# ===========================================
# CSRF PROTECTION
# ===========================================
CSRF_ENABLED=true
CSRF_COOKIE_NAME=_csrf
CSRF_HTTP_ONLY=true
CSRF_SAME_SITE=strict
CSRF_MAX_AGE=3600000

# ===========================================
# RATE LIMITING CONFIGURATION (times in milliseconds)
# ===========================================

# Registration: 3 attempts per hour per IP
RATE_LIMIT_REGISTRATION_WINDOW=3600000
RATE_LIMIT_REGISTRATION_MAX=3

# Login: 5 attempts per minute per IP, 20 per hour per account
RATE_LIMIT_LOGIN_WINDOW=60000
RATE_LIMIT_LOGIN_MAX=5
RATE_LIMIT_LOGIN_ACCOUNT_WINDOW=3600000
RATE_LIMIT_LOGIN_ACCOUNT_MAX=20

# Forgot password: 3 attempts per hour per IP
RATE_LIMIT_FORGOT_PASSWORD_WINDOW=3600000
RATE_LIMIT_FORGOT_PASSWORD_MAX=3

# Token refresh: 30 attempts per 5 minutes per IP
RATE_LIMIT_TOKEN_REFRESH_WINDOW=300000
RATE_LIMIT_TOKEN_REFRESH_MAX=30

# Email verification: 10 attempts per 5 minutes per IP
RATE_LIMIT_EMAIL_VERIFICATION_WINDOW=300000
RATE_LIMIT_EMAIL_VERIFICATION_MAX=10

# General API rate limiting: 100 requests per 15 minutes
RATE_LIMIT_GENERAL_WINDOW=900000
RATE_LIMIT_GENERAL_MAX=100

# ===========================================
# IP EXTRACTION AND PROXY CONFIGURATION
# ===========================================
PROXIED_HEADERS=X-Forwarded-For,X-Real-IP,X-Client-IP,CF-Connecting-IP
FALLBACK_TO_REMOTE_ADDR=true

# ===========================================
# REQUEST LOGGING
# ===========================================
SECURITY_LOGGING_ENABLED=true
LOG_REQUESTS=true
LOG_RESPONSES=false
LOG_HEADERS=true
LOG_BODY=false
LOG_IP=true
LOG_USER_AGENT=true
LOG_EXCLUDE_PATHS=/health,/metrics
LOG_MAX_BODY_SIZE=1024

# ===========================================
# ORIGIN VALIDATION
# ===========================================
ORIGIN_VALIDATION_STRICT=true
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,https://your-frontend-domain.com
REQUIRE_ORIGIN_HEADER=true
REQUIRE_REFERER_HEADER=false

# ===========================================
# LEGACY CORS CONFIGURATION (for backward compatibility)
# ===========================================
CORS_ORIGIN=http://localhost:3000,http://localhost:3001

# ===========================================
# JWT CONFIGURATION (from existing jwt.config.ts)
# ===========================================
JWT_ACCESS_TOKEN_SECRET=your-super-secure-access-token-secret-key
JWT_REFRESH_TOKEN_SECRET=your-super-secure-refresh-token-secret-key
JWT_ACCESS_TOKEN_EXPIRES_IN=15m
JWT_REFRESH_TOKEN_EXPIRES_IN=7d
JWT_ISSUER=english-app-backend
JWT_AUDIENCE=english-app-client
JWT_ALGORITHM=HS256
# JWT_KEY_ID=optional-key-id

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_USERNAME=postgres
DATABASE_PASSWORD=password
DATABASE_NAME=english_learn_db
DATABASE_SSL=false

# ===========================================
# PRODUCTION SECURITY RECOMMENDATIONS
# ===========================================
# For production deployment, consider:
# 1. Set NODE_ENV=production
# 2. Use strong, unique secrets for JWT tokens
# 3. Enable TRUST_PROXY=true if behind a reverse proxy
# 4. Set appropriate CORS_ORIGINS for your frontend domains
# 5. Enable HSTS_PRELOAD=true if your domain is in HSTS preload list
# 6. Consider setting REQUIRE_REFERER_HEADER=true for sensitive operations
# 7. Adjust rate limits based on your application's needs
# 8. Use HTTPS in production (DATABASE_SSL=true if database supports it)
# 9. Consider using Redis for rate limiting store in production
# 10. Enable comprehensive logging and monitoring